-- MySQL Script generated by MySQL Workbench
-- Thu Jul 14 10:03:29 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP DATABASE IF EXISTS BlogManagementDB;
CREATE DATABASE IF NOT EXISTS BlogManagementDB;
USE BlogManagementDB;
-- -----------------------------------------------------
-- Table `MailingList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MailingList` ;

CREATE TABLE IF NOT EXISTS `MailingList` (
  `list_id` TINYINT NOT NULL,
  `number_of_members` TINYINT NOT NULL,
  `list_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`list_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GeneralUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GeneralUser` ;

CREATE TABLE IF NOT EXISTS `GeneralUser` (
  `user_id` TINYINT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `ip_address` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`user_id`, `email`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `JoinList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinList` ;

CREATE TABLE IF NOT EXISTS `JoinList` (
  `join_id` TINYINT NOT NULL AUTO_INCREMENT,
  `list_id` TINYINT NOT NULL,
  `user_id` TINYINT NOT NULL,
  PRIMARY KEY (`join_id`),
  INDEX `FK_JOIN LIST_USER_idx` (`user_id` ASC) VISIBLE,
  INDEX `FK_JOIN LIST_MAILING_idx` (`list_id` ASC) VISIBLE,
  CONSTRAINT `FK_JOIN LIST_MAILING`
    FOREIGN KEY (`list_id`)
    REFERENCES `MailingList` (`list_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_JOIN LIST_USER`
    FOREIGN KEY (`user_id`)
    REFERENCES `GeneralUser` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Search`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Search` ;

CREATE TABLE IF NOT EXISTS `Search` (
  `search_id` TINYINT NOT NULL,
  `user_id` TINYINT NOT NULL,
  `keyword` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`search_id`),
  INDEX `FK_SEARCH_USER_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `FK_SEARCH_USER`
    FOREIGN KEY (`user_id`)
    REFERENCES `GeneralUser` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Queries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Queries` ;

CREATE TABLE IF NOT EXISTS `Queries` (
  `query_id` TINYINT NOT NULL AUTO_INCREMENT,
  `query_type` VARCHAR(45) NOT NULL,
  `related_table` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`query_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SearchUse`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SearchUse` ;

CREATE TABLE IF NOT EXISTS `SearchUse` (
  `use_id` TINYINT NOT NULL,
  `search_id` TINYINT NOT NULL,
  `query_id` TINYINT NULL,
  PRIMARY KEY (`use_id`),
  INDEX `FK_SEARCHUSE_SEARCH_idx` (`search_id` ASC) VISIBLE,
  INDEX `FK_SERRCHUSE_QUERY_idx` (`query_id` ASC) VISIBLE,
  CONSTRAINT `FK_SEARCHUSE_SEARCH`
    FOREIGN KEY (`search_id`)
    REFERENCES `Search` (`search_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_SERRCHUSE_QUERY`
    FOREIGN KEY (`query_id`)
    REFERENCES `Queries` (`query_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SpecialPerson`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SpecialPerson` ;

CREATE TABLE IF NOT EXISTS `SpecialPerson` (
  `person_id` TINYINT NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `special_type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`person_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SpecialUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SpecialUser` ;

CREATE TABLE IF NOT EXISTS `SpecialUser` (
  `special_user_id` TINYINT NOT NULL,
  `person_id` TINYINT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`special_user_id`, `person_id`),
  INDEX `FKPK_SPECIALUSER_SPECIALPERSON_idx` (`person_id` ASC) VISIBLE,
  CONSTRAINT `FKPK_SPECIALUSER_SPECIALPERSON`
    FOREIGN KEY (`person_id`)
    REFERENCES `SpecialPerson` (`person_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Registered`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Registered` ;

CREATE TABLE IF NOT EXISTS `Registered` (
  `registered_id` TINYINT NOT NULL,
  `user_id` TINYINT NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `passwords` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`registered_id`, `user_id`),
  INDEX `FK_REGISTERED_GENERALUSER_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `FKPK_REGISTERED_GENERALUSER`
    FOREIGN KEY (`user_id`)
    REFERENCES `GeneralUser` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Admins`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Admins` ;

CREATE TABLE IF NOT EXISTS `Admins` (
  `admin_id` TINYINT NOT NULL,
  `registered_id` TINYINT NOT NULL,
  PRIMARY KEY (`admin_id`, `registered_id`),
  INDEX `FK_ADMIN_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  CONSTRAINT `FK_ADMIN_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Region`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Region` ;

CREATE TABLE IF NOT EXISTS `Region` (
  `region_id` TINYINT NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `zone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`region_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Accounts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Accounts` ;

CREATE TABLE IF NOT EXISTS `Accounts` (
  `account_id` TINYINT NOT NULL,
  `user_id` TINYINT NULL,
  `special_user_id` TINYINT NULL,
  `admin_id` TINYINT NULL,
  `region_id` TINYINT NULL,
  PRIMARY KEY (`account_id`),
  INDEX `FK_ACCOUNT_USER_idx` (`user_id` ASC) VISIBLE,
  INDEX `FK_ACCOUNT_ADMIN_idx` (`admin_id` ASC) VISIBLE,
  INDEX `FK_ACCOUNT_REGION_idx` (`region_id` ASC) VISIBLE,
  INDEX `FK_ACCOUNT_SPECIALUSER_idx` (`special_user_id` ASC) VISIBLE,
  CONSTRAINT `FK_ACCOUNT_USER`
    FOREIGN KEY (`user_id`)
    REFERENCES `GeneralUser` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ACCOUNT_SPECIALUSER`
    FOREIGN KEY (`special_user_id`)
    REFERENCES `SpecialUser` (`special_user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ACCOUNT_ADMIN`
    FOREIGN KEY (`admin_id`)
    REFERENCES `Admins` (`admin_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ACCOUNT_REGION`
    FOREIGN KEY (`region_id`)
    REFERENCES `Region` (`region_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Roles` ;

CREATE TABLE IF NOT EXISTS `Roles` (
  `role_id` TINYINT NOT NULL,
  `role_name` VARCHAR(45) NULL,
  `descriptions` VARCHAR(100) NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AccountUse`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AccountUse` ;

CREATE TABLE IF NOT EXISTS `AccountUse` (
  `account_use_id` TINYINT NOT NULL,
  `account_id` TINYINT NOT NULL,
  `role_id` TINYINT NULL,
  PRIMARY KEY (`account_use_id`),
  INDEX `FK_ACCOUNTUSE_ACCOUNT_idx` (`account_id` ASC) VISIBLE,
  INDEX `FK_ACCOUNTUSE_ROLES_idx` (`role_id` ASC) VISIBLE,
  CONSTRAINT `FK_ACCOUNTUSE_ACCOUNT`
    FOREIGN KEY (`account_id`)
    REFERENCES `Accounts` (`account_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ACCOUNTUSE_ROLES`
    FOREIGN KEY (`role_id`)
    REFERENCES `Roles` (`role_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Post` ;

CREATE TABLE IF NOT EXISTS `Post` (
  `post_id` TINYINT NOT NULL auto_increment,
  `post_date` DATETIME NOT NULL,
  `content` VARCHAR(200) NOT NULL,
  `is_general` BIT NOT NULL default 1,
  `is_special` BIT NOT NULL default 0,
  `is_group` BIT NOT NULL default 0,
  `transmits` TINYINT NOT NULL default 0,
  `likes` TINYINT NOT NULL default 0,
  `dislikes` TINYINT NOT NULL default 0,
  `number_comments` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`post_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Topics`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Topics` ;

CREATE TABLE IF NOT EXISTS `Topics` (
  `topic_id` TINYINT NOT NULL,
  `topic_tag` VARCHAR(45) NOT NULL,
  `number_posts` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`topic_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Tagged`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Tagged` ;

CREATE TABLE IF NOT EXISTS `Tagged` (
  `tagged_id` TINYINT NOT NULL auto_increment,
  `topic_id` TINYINT NULL,
  `post_id` TINYINT NOT NULL,
  PRIMARY KEY (`tagged_id`),
  INDEX `FK_TAGGED_TOPICS_idx` (`topic_id` ASC) VISIBLE,
  INDEX `FK_TAGGED_POST_idx` (`post_id` ASC) VISIBLE,
  CONSTRAINT `FK_TAGGED_TOPICS`
    FOREIGN KEY (`topic_id`)
    REFERENCES `Topics` (`topic_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_TAGGED_POST`
    FOREIGN KEY (`post_id`)
    REFERENCES `Post` (`post_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GeneralPost`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GeneralPost` ;

CREATE TABLE IF NOT EXISTS `GeneralPost` (
  `general_post_id` TINYINT NOT NULL,
  `post_id` TINYINT NOT NULL,
  `registered_id` TINYINT NOT NULL,
  PRIMARY KEY (`general_post_id`, `post_id`),
  INDEX `FKPK_GENERALPOST_POST_idx` (`post_id` ASC) VISIBLE,
  INDEX `FKPK_GENERALPOST_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  CONSTRAINT `FKPK_GENERALPOST_POST`
    FOREIGN KEY (`post_id`)
    REFERENCES `Post` (`post_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FKPK_GENERALPOST_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SpecialPost`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SpecialPost` ;

CREATE TABLE IF NOT EXISTS `SpecialPost` (
  `special_post_id` TINYINT NOT NULL,
  `post_id` TINYINT NOT NULL,
  `special_user_id` TINYINT NOT NULL,
  `category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`special_post_id`, `post_id`),
  INDEX `FKPK_SPECIALPOST_POST_idx` (`post_id` ASC) VISIBLE,
  INDEX `FKPK_SPECIALPOST_SPECIALUSER_idx` (`special_user_id` ASC) VISIBLE,
  CONSTRAINT `FKPK_SPECIALPOST_POST`
    FOREIGN KEY (`post_id`)
    REFERENCES `Post` (`post_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FKPK_SPECIALPOST_SPECIALUSER`
    FOREIGN KEY (`special_user_id`)
    REFERENCES `SpecialUser` (`special_user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HelpInfo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HelpInfo` ;

CREATE TABLE IF NOT EXISTS `HelpInfo` (
  `help_info_id` TINYINT NOT NULL,
  `special_post_id` TINYINT NOT NULL,
  PRIMARY KEY (`help_info_id`, `special_post_id`),
  INDEX `FKPK_HELPINFO_SPECIALPOST_idx` (`special_post_id` ASC) VISIBLE,
  CONSTRAINT `FKPK_HELPINFO_SPECIALPOST`
    FOREIGN KEY (`special_post_id`)
    REFERENCES `SpecialPost` (`special_post_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HelpNeeder`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HelpNeeder` ;

CREATE TABLE IF NOT EXISTS `HelpNeeder` (
  `needer_id` TINYINT NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`needer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HelpRelated`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HelpRelated` ;

CREATE TABLE IF NOT EXISTS `HelpRelated` (
  `related_id` TINYINT NOT NULL,
  `help_info_id` TINYINT NULL,
  `needer_id` TINYINT NOT NULL,
  PRIMARY KEY (`related_id`),
  INDEX `FK_RELATED_HELPINFO_idx` (`help_info_id` ASC) VISIBLE,
  INDEX `FK_RELATED_NEEDER_idx` (`needer_id` ASC) VISIBLE,
  CONSTRAINT `FK_RELATED_HELPINFO`
    FOREIGN KEY (`help_info_id`)
    REFERENCES `HelpInfo` (`help_info_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_RELATED_NEEDER`
    FOREIGN KEY (`needer_id`)
    REFERENCES `HelpNeeder` (`needer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContentStyle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ContentStyle` ;

CREATE TABLE IF NOT EXISTS `ContentStyle` (
  `style_id` TINYINT NOT NULL AUTO_INCREMENT,
  `type_name` VARCHAR(45) NOT NULL,
  `size` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`style_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PostStyle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PostStyle` ;

CREATE TABLE IF NOT EXISTS `PostStyle` (
  `pair_id` TINYINT NOT NULL,
  `post_id` TINYINT NOT NULL,
  `style_id` TINYINT NULL,
  PRIMARY KEY (`pair_id`),
  INDEX `FK_POSTSTYLE_POST_idx` (`post_id` ASC) VISIBLE,
  INDEX `FK_POSTSTYLE_CONTENT_idx` (`style_id` ASC) VISIBLE,
  CONSTRAINT `FK_POSTSTYLE_POST`
    FOREIGN KEY (`post_id`)
    REFERENCES `Post` (`post_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_POSTSTYLE_CONTENT`
    FOREIGN KEY (`style_id`)
    REFERENCES `ContentStyle` (`style_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TechnicalStaff`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TechnicalStaff` ;

CREATE TABLE IF NOT EXISTS `TechnicalStaff` (
  `technical_staff_id` TINYINT NOT NULL,
  `staff_name` VARCHAR(45) NOT NULL,
  `is_lead` BIT(1) NOT NULL,
  PRIMARY KEY (`technical_staff_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Service`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Service` ;

CREATE TABLE IF NOT EXISTS `Service` (
  `service_id` TINYINT NOT NULL,
  `staff_id` TINYINT NOT NULL,
  `technical_staff_id` TINYINT NULL,
  PRIMARY KEY (`service_id`),
  INDEX `FK_SERVICE_TECHNICAL_idx` (`technical_staff_id` ASC) VISIBLE,
  CONSTRAINT `FK_SERVICE_TECHNICAL`
    FOREIGN KEY (`technical_staff_id`)
    REFERENCES `TechnicalStaff` (`technical_staff_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Problem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Problem` ;

CREATE TABLE IF NOT EXISTS `Problem` (
  `problem_id` TINYINT NOT NULL,
  `registered_id` TINYINT NULL,
  `service_id` TINYINT NULL,
  `descriptions` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`problem_id`),
  INDEX `FK_PROBLEM_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  INDEX `FK_PROBLEM_SERVICE_idx` (`service_id` ASC) VISIBLE,
  CONSTRAINT `FK_PROBLEM_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_PROBLEM_SERVICE`
    FOREIGN KEY (`service_id`)
    REFERENCES `Service` (`service_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bug`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Bug` ;

CREATE TABLE IF NOT EXISTS `Bug` (
  `bug_id` TINYINT NOT NULL,
  `problem_id` TINYINT NOT NULL,
  PRIMARY KEY (`bug_id`, `problem_id`),
  INDEX `FK_BUG_PROBLEM_idx` (`problem_id` ASC) VISIBLE,
  CONSTRAINT `FK_BUG_PROBLEM`
    FOREIGN KEY (`problem_id`)
    REFERENCES `Problem` (`problem_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Notify`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Notify` ;

CREATE TABLE IF NOT EXISTS `Notify` (
  `notify_id` TINYINT NOT NULL,
  `service_id` TINYINT NULL,
  `admin_id` TINYINT NULL,
  `descriptions` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`notify_id`),
  INDEX `FK_NOTIFY_SERVICE_idx` (`service_id` ASC) VISIBLE,
  INDEX `FK_NOTIFY_ADMIN_idx` (`admin_id` ASC) VISIBLE,
  CONSTRAINT `FK_NOTIFY_SERVICE`
    FOREIGN KEY (`service_id`)
    REFERENCES `Service` (`service_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_NOTIFY_ADMIN`
    FOREIGN KEY (`admin_id`)
    REFERENCES `Admins` (`admin_id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BugType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BugType` ;

CREATE TABLE IF NOT EXISTS `BugType` (
  `bug_type_id` TINYINT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `urgency` TINYINT NOT NULL,
  PRIMARY KEY (`bug_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Responsible`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Responsible` ;

CREATE TABLE IF NOT EXISTS `Responsible` (
  `responsible_id` TINYINT NOT NULL,
  `technical_staff_id` TINYINT NOT NULL,
  `bug_type_id` TINYINT NOT NULL,
  PRIMARY KEY (`responsible_id`),
  INDEX `FK_RESPONSIBLE_BUGTYPE_idx` (`bug_type_id` ASC) VISIBLE,
  INDEX `FK_RESPONSIBLE_TECHNICAL_idx` (`technical_staff_id` ASC) VISIBLE,
  CONSTRAINT `FK_RESPONSIBLE_BUGTYPE`
    FOREIGN KEY (`bug_type_id`)
    REFERENCES `BugType` (`bug_type_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_RESPONSIBLE_TECHNICAL`
    FOREIGN KEY (`technical_staff_id`)
    REFERENCES `TechnicalStaff` (`technical_staff_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BugHave`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BugHave` ;

CREATE TABLE IF NOT EXISTS `BugHave` (
  `have_id` TINYINT NOT NULL,
  `bug_id` TINYINT NULL,
  `bug_type_id` TINYINT NULL,
  PRIMARY KEY (`have_id`),
  INDEX `FK_BUGHAVE_BUG_idx` (`bug_id` ASC) VISIBLE,
  INDEX `FK_BUGHAVE_BUGTYPE_idx` (`bug_type_id` ASC) VISIBLE,
  CONSTRAINT `FK_BUGHAVE_BUG`
    FOREIGN KEY (`bug_id`)
    REFERENCES `Bug` (`bug_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_BUGHAVE_BUGTYPE`
    FOREIGN KEY (`bug_type_id`)
    REFERENCES `BugType` (`bug_type_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SupportDevice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SupportDevice` ;

CREATE TABLE IF NOT EXISTS `SupportDevice` (
  `device_id` TINYINT NOT NULL,
  `device_name` VARCHAR(45) NOT NULL,
  `version` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`device_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UserDevice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `UserDevice` ;

CREATE TABLE IF NOT EXISTS `UserDevice` (
  `user_device_id` TINYINT NOT NULL,
  `device_id` TINYINT NULL,
  `registered_id` TINYINT NOT NULL,
  PRIMARY KEY (`user_device_id`),
  INDEX `FK_USERDEVICE_DEVICE_idx` (`device_id` ASC) VISIBLE,
  INDEX `FK_USERDEVICE_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  CONSTRAINT `FK_USERDEVICE_DEVICE`
    FOREIGN KEY (`device_id`)
    REFERENCES `SupportDevice` (`device_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_USERDEVICE_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Interested`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Interested` ;

CREATE TABLE IF NOT EXISTS `Interested` (
  `interest_id` TINYINT NOT NULL,
  `registered_id` TINYINT NOT NULL,
  `topic_id` TINYINT NULL,
  PRIMARY KEY (`interest_id`),
  INDEX `FK_INTERESTED_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  INDEX `FK_INTERESTED_TOPIC_idx` (`topic_id` ASC) VISIBLE,
  CONSTRAINT `FK_INTERESTED_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_INTERESTED_TOPIC`
    FOREIGN KEY (`topic_id`)
    REFERENCES `Topics` (`topic_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SpendTime`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SpendTime` ;

CREATE TABLE IF NOT EXISTS `SpendTime` (
  `time_id` TINYINT NOT NULL,
  `registered_id` TINYINT NOT NULL,
  `topic_id` TINYINT NULL,
  `spend_time` INT NOT NULL,
  `total_time` INT NOT NULL,
  PRIMARY KEY (`time_id`),
  INDEX `FK_SPENDTIME_TOPIC_idx` (`topic_id` ASC) VISIBLE,
  INDEX `FK_SPENDTIME_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  CONSTRAINT `FK_SPENDTIME_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_SPENDTIME_TOPIC`
    FOREIGN KEY (`topic_id`)
    REFERENCES `Topics` (`topic_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Comments` ;

CREATE TABLE IF NOT EXISTS `Comments` (
  `comment_id` TINYINT NOT NULL auto_increment,
  `post_id` TINYINT NOT NULL,
  `registered_id` TINYINT NOT NULL,
  `content` VARCHAR(500) NOT NULL,
  `number_replies` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`comment_id`),
  INDEX `FK_COMMENT_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  INDEX `FK_COMMENT_POST_idx` (`post_id` ASC) VISIBLE,
  CONSTRAINT `FK_COMMENT_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_COMMENT_POST`
    FOREIGN KEY (`post_id`)
    REFERENCES `Post` (`post_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Group_s`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Group_s` ;

CREATE TABLE IF NOT EXISTS `Group_s` (
  `group_id` TINYINT NOT NULL,
  `group_name` VARCHAR(45) NOT NULL,
  `number_users` INT NOT NULL DEFAULT 0,
  `number_posts` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`group_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DMGroupUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMGroupUser` ;

CREATE TABLE IF NOT EXISTS `DMGroupUser` (
  `dm_user_id` TINYINT NOT NULL,
  `registered_id` TINYINT NOT NULL,
  PRIMARY KEY (`dm_user_id`, `registered_id`),
  INDEX `FK_DMGROUPUSER_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  CONSTRAINT `FK_DMGROUPUSER_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DMAdmin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMAdmin` ;

CREATE TABLE IF NOT EXISTS `DMAdmin` (
  `dm_admin_id` TINYINT NOT NULL,
  `dm_user_id` TINYINT NOT NULL,
  PRIMARY KEY (`dm_admin_id`, `dm_user_id`),
  INDEX `FK_DMADMIN_DMUSER_idx` (`dm_user_id` ASC) VISIBLE,
  CONSTRAINT `FK_DMADMIN_DMUSER`
    FOREIGN KEY (`dm_user_id`)
    REFERENCES `DMGroupUser` (`dm_user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DMGroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMGroup` ;

CREATE TABLE IF NOT EXISTS `DMGroup` (
  `dm_group_id` TINYINT NOT NULL,
  `group_id` TINYINT NOT NULL,
  `dm_admin_id` TINYINT NOT NULL,
  PRIMARY KEY (`dm_group_id`, `group_id`),
  INDEX `FK_DMGROUP_GROUP_idx` (`group_id` ASC) VISIBLE,
  INDEX `FK_DMGROUP_GROUPADMIN_idx` (`dm_admin_id` ASC) VISIBLE,
  CONSTRAINT `FK_DMGROUP_GROUP`
    FOREIGN KEY (`group_id`)
    REFERENCES `Group_s` (`group_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_DMGROUP_GROUPADMIN`
    FOREIGN KEY (`dm_admin_id`)
    REFERENCES `DMAdmin` (`dm_admin_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PostingGroupUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PostingGroupUser` ;

CREATE TABLE IF NOT EXISTS `PostingGroupUser` (
  `posting_user_id` TINYINT NOT NULL,
  `registered_id` TINYINT NOT NULL,
  PRIMARY KEY (`posting_user_id`, `registered_id`),
  INDEX `FK_POSTINGGROUP_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  CONSTRAINT `FK_POSTINGGROUP_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PostingAdmin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PostingAdmin` ;

CREATE TABLE IF NOT EXISTS `PostingAdmin` (
  `posting_admin_id` TINYINT NOT NULL,
  `posting_user_id` TINYINT NOT NULL,
  PRIMARY KEY (`posting_admin_id`, `posting_user_id`),
  INDEX `FK_POSTINGADMIN_POSTINGUSER_idx` (`posting_user_id` ASC) VISIBLE,
  CONSTRAINT `FK_POSTINGADMIN_POSTINGUSER`
    FOREIGN KEY (`posting_user_id`)
    REFERENCES `PostingGroupUser` (`posting_user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PostingGroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PostingGroup` ;

CREATE TABLE IF NOT EXISTS `PostingGroup` (
  `posting_group_id` TINYINT NOT NULL,
  `group_id` TINYINT NOT NULL,
  `posting_admin_id` TINYINT NOT NULL,
  PRIMARY KEY (`posting_group_id`, `group_id`),
  INDEX `FK_POSTINGGROUP_GROUP_idx` (`group_id` ASC) VISIBLE,
  INDEX `FK_POSTINGGROUP_POSTINGADMIN_idx` (`posting_admin_id` ASC) VISIBLE,
  CONSTRAINT `FK_POSTINGGROUP_GROUP`
    FOREIGN KEY (`group_id`)
    REFERENCES `Group_s` (`group_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_POSTINGGROUP_POSTINGADMIN`
    FOREIGN KEY (`posting_admin_id`)
    REFERENCES `PostingAdmin` (`posting_admin_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `JoinGroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `JoinGroup` ;

CREATE TABLE IF NOT EXISTS `JoinGroup` (
  `join_id` TINYINT NOT NULL,
  `group_id` TINYINT NOT NULL,
  `registered_id` TINYINT NOT NULL,
  PRIMARY KEY (`join_id`),
  INDEX `FK_JOIN_GROUP_idx` (`group_id` ASC) VISIBLE,
  INDEX `FK_JOIN_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  CONSTRAINT `FK_JOIN_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_JOIN_GROUP`
    FOREIGN KEY (`group_id`)
    REFERENCES `Group_s` (`group_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GroupPost`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GroupPost` ;

CREATE TABLE IF NOT EXISTS `GroupPost` (
  `group_post_id` TINYINT NOT NULL,
  `post_id` TINYINT NOT NULL,
  `posting_user_id` TINYINT NOT NULL,
  `posting_group_id` TINYINT NOT NULL,
  `number_users` INT NOT NULL DEFAULT 0,
  `number_posts` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`group_post_id`, `post_id`),
  INDEX `FKPK_GROUPPOST_POST_idx` (`post_id` ASC) VISIBLE,
  INDEX `FKPK_GROUPPOST_POSTINGUSER_idx` (`posting_user_id` ASC) VISIBLE,
  INDEX `FKPK_GROUPPOST_POSTGROUP_idx` (`posting_group_id` ASC) VISIBLE,
  CONSTRAINT `FKPK_GROUPPOST_POST`
    FOREIGN KEY (`post_id`)
    REFERENCES `Post` (`post_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FKPK_GROUPPOST_POSTINGUSER`
    FOREIGN KEY (`posting_user_id`)
    REFERENCES `PostingGroupUser` (`posting_user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FKPK_GROUPPOST_POSTGROUP`
    FOREIGN KEY (`posting_group_id`)
    REFERENCES `PostingGroup` (`posting_group_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Message` ;

CREATE TABLE IF NOT EXISTS `Message` (
  `message_id` TINYINT NOT NULL,
  `dm_group_id` TINYINT NOT NULL,
  `dm_user_id` TINYINT NOT NULL,
  `content` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`message_id`),
  INDEX `FK_MESSAGE_DMUSER_idx` (`dm_user_id` ASC) VISIBLE,
  INDEX `FK_MESSAGE_DMGROUP_idx` (`dm_group_id` ASC) VISIBLE,
  CONSTRAINT `FK_MESSAGE_DMUSER`
    FOREIGN KEY (`dm_user_id`)
    REFERENCES `DMGroupUser` (`dm_user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_MESSAGE_DMGROUP`
    FOREIGN KEY (`dm_group_id`)
    REFERENCES `DMGroup` (`dm_group_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reply`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Reply` ;

CREATE TABLE IF NOT EXISTS `Reply` (
  `reply_id` TINYINT NOT NULL,
  `comment_id` TINYINT NOT NULL,
  `registered_id` TINYINT NOT NULL,
  `content` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`reply_id`),
  INDEX `FKPK_REPLY_REGISTERED_idx` (`registered_id` ASC) VISIBLE,
  INDEX `FKPK_REPLY_COMMENT_idx` (`comment_id` ASC) VISIBLE,
  CONSTRAINT `FKPK_REPLY_REGISTERED`
    FOREIGN KEY (`registered_id`)
    REFERENCES `Registered` (`registered_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FKPK_REPLY_COMMENT`
    FOREIGN KEY (`comment_id`)
    REFERENCES `Comments` (`comment_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;




